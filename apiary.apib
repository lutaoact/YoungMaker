FORMAT: 1A
HOST: http://www.cloud3edu.com

# Budweiser API
Cloud3's cloud based education system API


# Group Auth
## Providor: Local [/auth/local]
### Login [POST]
+ Request (application/json)

        {"email":"admin@admin.com","password":"admin"}

+ Response 200 (application/json)

        {"token":"dasdfqwerzxvaerqwer"}

#Group User
## User Collection [/api/users]
### Create [POST]
+ Request (application/json)
    
    + Header

            Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOiI1M2M2MDc4ZDAxZTBlYTNiNzk1MTVkOWMiLCJpYXQiOjE0MDU0ODkwNTIwMzYsImV4cCI6MTQwNTUwNzA1MjAzNn0.SABEI5TfvFExJz0T87eHFKZiEWF1BP-VwYKeI6yZ-sU

    + Body

            {"email":"admin@admin.com","name":"admin",password":"admin"}

+ Response 200 (application/json)

        {"token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOiI1M2M2MjA1NjAxZTBlYTNiNzk1MTVkOWQiLCJpYXQiOjE0MDU0OTMzMzQ1MjksImV4cCI6MTQwNTUxMTMzNDUyOX0.tzqgeGa6eSmwYiImb_fcYPjb4jRh3DIYnrsU8J_u41c"}

### Get List [GET]
+ Request (application/json)
    
    + Header

            Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOiI1M2M2MDc4ZDAxZTBlYTNiNzk1MTVkOWMiLCJpYXQiOjE0MDU0ODkwNTIwMzYsImV4cCI6MTQwNTUwNzA1MjAzNn0.SABEI5TfvFExJz0T87eHFKZiEWF1BP-VwYKeI6yZ-sU

+ Response 200 (application/json)

        [{"_id":"53c6078d01e0ea3b79515d9b","provider":"local","name":"Test User","email":"test@test.com","__v":0,"role":"user"},
        {"_id":"53c6078d01e0ea3b79515d9c","provider":"local","name":"Admin","email":"admin@admin.com","__v":0,"role":"admin"},
        {"_id":"53c6205601e0ea3b79515d9d","provider":"local","name":"cage","email":"cage@cage.com","__v":0,"role":"user"}]

## User Password [/api/users/{id}/password]
### Change Password [PUT]
+ Request (application/json)
    
    + Header

            Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOiI1M2M2MDc4ZDAxZTBlYTNiNzk1MTVkOWMiLCJpYXQiOjE0MDU0ODkwNTIwMzYsImV4cCI6MTQwNTUwNzA1MjAzNn0.SABEI5TfvFExJz0T87eHFKZiEWF1BP-VwYKeI6yZ-sU

    + Body

            {"oldPassword":"admin","newPassword":"admin2"}

+ Response 200 (application/json)

        OK
        
## Update and delete User, show user profile [/api/users/{id}]
### Change User orgId, avatar [PUT]
Only admin can change its orgId from empty to valid value.  
+ Request (application/json)
    
    + Header

            Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOiI1M2M2MDc4ZDAxZTBlYTNiNzk1MTVkOWMiLCJpYXQiOjE0MDU0ODkwNTIwMzYsImV4cCI6MTQwNTUwNzA1MjAzNn0.SABEI5TfvFExJz0T87eHFKZiEWF1BP-VwYKeI6yZ-sU

    + Body

            {"orgId":"qewrxf",
            "avatar","xewqr",
            }

+ Response 200 (application/json)

        {"_id":"53c6078d01e0ea3b79515d9c",
        "provider":"local",
        "name":"Admin",
        "email":"admin@admin.com",
        "__v":0,
        "orgId":"qewrxf",
        "avatar","xewqr",
        "role":"admin"}

### Delete user [DELETE]
Only admin can delete user.  
+ Request (application/json)
    
    + Header

            Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOiI1M2M2MDc4ZDAxZTBlYTNiNzk1MTVkOWMiLCJpYXQiOjE0MDU0ODkwNTIwMzYsImV4cCI6MTQwNTUwNzA1MjAzNn0.SABEI5TfvFExJz0T87eHFKZiEWF1BP-VwYKeI6yZ-sU

+ Response 200 (application/json)
        
        {"_id":"53c6078d01e0ea3b79515d9c",
        "provider":"local",
        "name":"Admin",
        "email":"admin@admin.com",
        "__v":0,
        "orgId":"qewrxf",
        "avatar","xewqr",
        "role":"admin"}


### Show user profile [GET]
Show user profile info, including name, role, avatar
+ Request (application/json)
    
    + Header

            Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOiI1M2M2MDc4ZDAxZTBlYTNiNzk1MTVkOWMiLCJpYXQiOjE0MDU0ODkwNTIwMzYsImV4cCI6MTQwNTUwNzA1MjAzNn0.SABEI5TfvFExJz0T87eHFKZiEWF1BP-VwYKeI6yZ-sU

+ Response 200 (application/json)
        
        {
        "name":"Admin",
        "avatar","xewqr",
        "role":"admin"}

## logged-in user info [/api/users/me]
### Get logged in user information [GET]
+ Request (application/json)
    + Header

            Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOiI1M2M2MDc4ZDAxZTBlYTNiNzk1MTVkOWMiLCJpYXQiOjE0MDU0ODkwNTIwMzYsImV4cCI6MTQwNTUwNzA1MjAzNn0.SABEI5TfvFExJz0T87eHFKZiEWF1BP-VwYKeI6yZ-sU

+ Response 200 (application/json)

        {"_id":"53c6078d01e0ea3b79515d9c",
        "provider":"local",
        "name":"Admin",
        "email":"admin@admin.com",
        "__v":0,
        "orgId":"qewrxf",
        "avatar","xewqr",
        "role":"admin"}

## Bulk Import Users [/api/users/bulk]
Import multiple users from a uploaded excel sheet
### Import [POST]
+ Request (application/json)
    
    + Header

            Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOiI1M2M2MDc4ZDAxZTBlYTNiNzk1MTVkOWMiLCJpYXQiOjE0MDU0ODkwNTIwMzYsImV4cCI6MTQwNTUwNzA1MjAzNn0.SABEI5TfvFExJz0T87eHFKZiEWF1BP-VwYKeI6yZ-sU

    + Body

            {
            "type":"admin|teacher|student",
            "key" : "wWxs9emwnf/1.xlsx",   # resource key of uploaded excel file from qiniu
            "orgId" : "organization_id",   # organization ID to which users belong to. 
            "classeId" : "classe_id"       # Classe ID to which the students belong to. Only needed for student type
            }

+ Response 200 (application/json)

    + Body
    
            {
            "total" : 100,  # Total number of users in excel table
            "success" : ["Black Jack", "Emily Brown", ...],  # Array of imported users name
            "failure" : [ error, error ] # Array of error object which indicate the cause of the failure on each user item
            }


# Group Qiniu
Qiniu related apis

## Upload token [/qiniu/uptoken]
### Get a upload token [GET]
+ Response 200 (application/json)

    + Body
    
            { "random": "l2o5rem8", "uptoken": "asdfzxverqwerdadsfadsf" }

## Private Download token [/qiniu/signedUrl/{key}]

+ Parameters

    + key (required, string, ``)
    
### Get a signed url [GET]
+ Response 200 (application/json)

    + Body

            "some/signed/url"


# Group Organization

## Organization Collection [/api/organization{?sub}]

### Get all Organizations [GET]

+ Parameters

    + sub (optional, string, ``)
    
+ Response 200 (application/json)

        [Organization,Organization,Organization]

### Create Organization [POST]

+ Request (application/json)

    + Header
    
            Auth:xxx
    
    + Body
    
            {"name":"清华",
            "subDomain":"tsinghua",
            "background":"url",
            "logo":"url",
            "type":"大学"
            }
            
+ Response 200 (application/json)
        
        Organization

## Organization Detail [/api/organization/{id}]

+ Parameters

    + id (required, string, `me`)

### Get User's Organization [GET]
+ Response 200 (application/json)

        {"_id":"xxxxxx",
        "name":"清华",
        "subDomain":"tsinghua",
        "background":"url",
        "logo":"url",
        "type":"大学"
        } 




# Group Classe

## Classe Collection [/api/classes]

### Get all Classes [GET]
    
+ Response 200 (application/json)

        [Classe,Classe,Classe]

### Create Classe [POST]

+ Request (application/json)

    + Header
    
            Auth:xxx
    
    + Body
    
            {"name":"14届物化班",
            "yearGrade":"2014届",
            "students":['afdaf','qwer','dasf']
            }
            
+ Response 200 (application/json)
        
        {"_id":"xqwerav",
        "orgId":"aceqwr",
        "name":"14届物化班",
        "yearGrade":"2014届",
        "students":[{"_id":"aeqwraf","name":"张三"},
            {"_id":"aeqwraf","name":"李四"},
            {"_id":"aeqwraf","name":"阿毛"}]
        }

## Classe Detail [/api/classes/{id}]

+ Parameters

    + id (required, string, ``)

### Get Classe Detail [GET]
+ Response 200 (application/json)

        {"_id":"xqwerav",
        "org_id":"aceqwr",
        "name":"14届物化班",
        "year-grade":"2014届",
        "students":[{"_id":"aeqwraf","name":"张三"},
            {"_id":"aeqwraf","name":"李四"},
            {"_id":"aeqwraf","name":"阿毛"}]
        }

## Students of Classe [/api/classes/{id}/students]

+ Parameters

    + id (required, string, ``)

### Insert Students to Classe [POST]

+ Request (application/json)

        {"key":"whatever/students.xlsx"}

+ Response 200 (application/json)

        {"counter":100,
        "failure":[]
        }
        
### Get Students in specified Classe [GET]

+ Request (application/json)
    
    + Header
    
            Auth:xxx


+ Response 200 (application/json)

        [ { "_id": "53ce27e2fc3f58ce93a864dd", 
            "name": "t1", 
            "email": "t1@cloud3edu.com", 
            "orgId": "53ccb203606200e88b712bf9" }, 
          { "_id": "53ce27e2fc3f58ce93a864de", 
            "name": "t2", 
            "email": "t2@cloud3edu.com", 
            "orgId": "53ccb203606200e88b712bf9" }, 
          { "_id": "53ce27e2fc3f58ce93a864df", 
            "name": "t3", 
            "email": "t3@cloud3edu.com", 
            "orgId": "53ccb203606200e88b712bf9" } ]
        
        
# Group Course

## Course Collection [/api/courses]

### Get all Courses that user has permission to read[GET]
    
+ Response 200 (application/json)

        [ 
          { "_id": "53f758fe7c375e1ca59592dc", 
            "name": "Music 101", 
            "categoryId": "53f758fe7c375e1ca59592d9", 
            "thumbnail": "http://test.com/thumb.jpg", 
            "info": "This is course music 101", 
            "__v": 0, 
            "modified": "2014-08-22T14:51:42.719Z", 
            "created": "2014-08-22T14:51:42.720Z", 
            "classes": [ 
                 { "_id": "53f758fe7c375e1ca59592db", 
                   "name": "Class one", 
                   "orgId": "53f758fe7c375e1ca59592da", 
                   "yearGrade": "2014" } ], 
            "owners": [ "53d085b46850008f9b91a9fe" ], 
            "lectureAssembly": [] 
          } 
        ]

### Create Course [POST]
Only teacher can create course
+ Request (application/json)

    + Header
    
            Auth:xxx
    
    + Body
    
            { 
              "name": "Art 101", 
              "categoryId": "53f758fe7c375e1ca59592d9", 
              "thumbnail": "http://test.com/thumb.jpg", 
              "info": "This is course art 101",  
              "classes": [ "53f758fe7c375e1ca59592db" ], 
              "lectureAssembly": []
            }
            
+ Response 200 (application/json)
        
            { 
              "__v": 0, 
              "name": "Art 101", 
              "categoryId": "53f758fe7c375e1ca59592d9", 
              "thumbnail": "http://test.com/thumb.jpg", 
              "info": "This is course art 101", 
              "modified": "2014-08-26T03:21:56.524Z", 
              "created": "2014-08-26T03:21:56.524Z", 
              "_id": "53fbfd54e36b38dc0b5da6ec", 
              "classes": [ "53f758fe7c375e1ca59592db" ], 
              "owners": [ "53d085b46850008f9b91a9fe" ], 
              "lectureAssembly": [] 
            }


## Get Course Detail or delete course [/api/courses/{id}]

+ Parameters

    + id (required, string, `course id`)

### Get Course Detail [GET]
Read course detail if user has permission to it

+ Response 200 (application/json)

            { 
              "__v": 0, 
              "name": "Art 101", 
              "categoryId": "53f758fe7c375e1ca59592d9", 
              "thumbnail": "http://test.com/thumb.jpg", 
              "info": "This is course art 101", 
              "modified": "2014-08-26T03:21:56.524Z", 
              "created": "2014-08-26T03:21:56.524Z", 
              "_id": "53fbfd54e36b38dc0b5da6ec", 
              "classes": [ "53f758fe7c375e1ca59592db" ], 
              "owners": [ "53d085b46850008f9b91a9fe" ], 
              "lectureAssembly": [] 
            }
            
### Delete Course [DELETE]
Only teacher can delete course
+ Request (application/json)

    + Header
    
            Auth:xxx
            
+ Response 204 (application/json)


# Group Lecture

## Lecture Collection [/api/courses/:courseId/lectures]

+ Parameters

    + courseId (required, string)

### Get all Lectures [GET]
    
+ Response 200 (application/json)

        [Lecture,Lecture,Lecture]

### Create Lecture [POST]

+ Request (application/json)

    + Header
    
            Auth:xxx
    
    + Body
    
            {"name":"第一课",
            "courseId":"xzqwersd",
            "thumbnail":"xxadf",
            "info":"aswqersac",
            }
            
+ Response 200 (application/json)
        
        {"_id":"caeqwsdga",
        "name":"第一课",
        "courseId":"xzqwersd",
        "thumbnail":"xxadf",
        "info":"aswqersac",
        "slides":[]
        }

## Lecture Detail [/api/lectures/{id}]

+ Parameters

    + id (required, string, ``)

### Get Lecture Detail [GET]

+ Response 200 (application/json)

        {"_id":"caeqwsdga",
        "name":"第一课",
        "courseId":"xzqwersd",
        "thumbnail":"xxadf",
        "info":"aswqersac",
        "slides":[{"thumb":"asdfc","raw":"qwer"},{"thumb":"asdfc","raw":"qwer"},{"thumb":"asdfc","raw":"qwer"}]
        }

### Update Lecture [PUT]

+ Request (application/json)

    + Header
    
            Auth:xxx
    
    + Body
    
            {"name":"第一课",
            "courseId":"xzqwersd",
            "thumbnail":"xxadf",
            "info":"aswqersac",
            "slides":[{"thumb":"asdfc","raw":"qwer"},{"thumb":"asdfc","raw":"qwer"},{"thumb":"asdfc","raw":"qwer"}]
            }
            
+ Response 200 (application/json)
        
        {"_id":"caeqwsdga",
        "name":"第一课",
        "courseId":"xzqwersd",
        "thumbnail":"xxadf",
        "info":"aswqersac",
        "slides":[{"thumb":"asdfc","raw":"qwer"},{"thumb":"asdfc","raw":"qwer"},{"thumb":"asdfc","raw":"qwer"}]
        }

### Delete Lecture [DELETE]
This should delete all the slides image and thumbnail in storage.

+ Request (application/json)

    + Header
    
            Auth:xxx
            
+ Response 200 (application/json)
        
        OK

# Group ClassProgress

## ClassProgress Collection [/api/ClassProgresses]

### Get all ClassProgresses [GET]
    
+ Response 200 (application/json)

        [ClassProgress,ClassProgress,ClassProgress]

### Create ClassProgress [POST]

+ Request (application/json)

    + Header
    
            Auth:xxx
    
    + Body
    
            {"courseId":"qwerasdferqw",
            "classeId":"zxcvqwsf",
            "thumbnail":"xxadf",
            "info":"aswqersac"
            }
            
+ Response 200 (application/json)
        
        {"_id":"ewqaxvr",
        "courseId":"qwerasdferqw",
        "classeId":"zxcvqwsf",
        "lectures":[{"lectureId":"axceqrw","name":"力的相互作用","finished":false},
            {"lectureId":"axceqrw","name":"力的相互作用","finished":false},
            {"lectureId":"axceqrw","name":"力的相互作用","finished":false},
            {"lectureId":"axceqrw","name":"力的相互作用","finished":false}],
        "timeTable":[{"name":"第一课","time":"ISOTime"},
            {"name":"第二课","time":"ISOTime"},
            {"name":"第三课","time":"ISOTime"}]
        }

## ClassProgress Detail [/api/ClassProgress/{id}]

+ Parameters

    + id (required, string, ``)

### Get ClassProgress Detail [GET]
+ Response 200 (application/json)

        {"_id":"ewqaxvr",
        "courseId":"qwerasdferqw",
        "classeId":"zxcvqwsf",
        "lectures":[{"lectureId":"axceqrw","name":"力的相互作用","finished":false},
            {"lectureId":"axceqrw","name":"力的相互作用","finished":false},
            {"lectureId":"axceqrw","name":"力的相互作用","finished":false},
            {"lectureId":"axceqrw","name":"力的相互作用","finished":false}],
        "table_sheet":[{"name":"第一课","time":"ISOTime"},
            {"name":"第二课","time":"ISOTime"},
            {"name":"第三课","time":"ISOTime"}]
        }